<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:icons="using:Material.Icons.Avalonia"
             xmlns:itemsView="clr-namespace:FootprintViewer.Fluent.Views.SidePanel.Items"
             xmlns:materialIcons="using:Material.Icons.Avalonia"
             xmlns:vmd="clr-namespace:FootprintViewer.Fluent.Designer"
             xmlns:c="clr-namespace:FootprintViewer.Fluent.Controls"
             xmlns:items="clr-namespace:FootprintViewer.Fluent.ViewModels.SidePanel.Items"
             xmlns:prop="using:FootprintViewer.Fluent.Properties"
			 xmlns:conv="clr-namespace:FootprintViewer.Fluent.Converters"
			 x:DataType="items:GroundStationViewModel"
             mc:Ignorable="d"
			 d:DesignWidth="380"
             x:Class="FootprintViewer.Fluent.Views.SidePanel.Items.GroundStationView"
			 d:DataContext="{x:Static vmd:DesignData.GroundStation}">

	<UserControl.Resources>
		<conv:GroundStationModeConverter x:Key="GroundStationModeConv"/>
		<conv:SolidColorBrushConverter x:Key="BrushConv"/>
		<conv:CoordinateConverter x:Key="CoordinateConv"/>
	</UserControl.Resources>

	<UserControl.Styles>
		<Style Selector="materialIcons|MaterialIcon.a1">
			<Setter Property="Foreground" Value="{DynamicResource TextHighBrush}"/>
			<Setter Property="Kind" Value="Visibility"></Setter>
			<Setter Property="Width" Value="20"></Setter>
			<Setter Property="Height" Value="20"></Setter>
		</Style>
		<Style Selector="materialIcons|MaterialIcon.a2">
			<Setter Property="Foreground" Value="{DynamicResource TextHighBrush}"/>
			<Setter Property="Kind" Value="VisibilityOff"></Setter>
			<Setter Property="Width" Value="20"></Setter>
			<Setter Property="Height" Value="20"></Setter>
		</Style>
	</UserControl.Styles>

	<Border Classes="item">
		<Grid RowDefinitions="Auto,8,Auto">

			<Grid ColumnDefinitions="*,Auto">
				<StackPanel>
					<TextBlock Text="{Binding Name}"
							   VerticalAlignment="Center"
							   Classes="h4 high"/>
					<TextBlock Text="{Binding Center, Converter={StaticResource CoordinateConv}}"
							   Classes="h1 medium"/>
				</StackPanel>

				<ToggleButton x:Name="ShowToggleButton"
							  Classes="invisible"
							  Padding="4"
							  Grid.Column="1"
							  IsChecked="{Binding IsShow}">
					<materialIcons:MaterialIcon Classes.a1="{Binding #ShowToggleButton.IsChecked}"
												Classes.a2="{Binding !#ShowToggleButton.IsChecked}"/>
				</ToggleButton>
			</Grid>

			<Border Classes="item"
					Background="{DynamicResource AccentDarkBrush}"
					Grid.Row="2"
					IsVisible="{Binding #ShowToggleButton.IsChecked}">
				<StackPanel Spacing="8">

					<c:TextValue Text="Range angles">
						<c:TextValue.ContentTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="28,Auto,28">
									<TextBlock Text="{Binding #RangeSlider.LowerSelectedValue, StringFormat={}{0}°}"/>
									<TextBlock Grid.Column="1" Text="-"/>
									<TextBlock Grid.Column="2"
											   Text="{Binding #RangeSlider.UpperSelectedValue, StringFormat={}{0}°}"/>
								</Grid>
							</DataTemplate>
						</c:TextValue.ContentTemplate>
					</c:TextValue>

					<c:RangeSlider x:Name="RangeSlider"
								   Minimum="0"
								   Maximum="50"
								   LowerSelectedValue="{Binding InnerAngle}"
								   UpperSelectedValue="{Binding OuterAngle}"
								   IsSnapToTickEnabled="True"
								   TickFrequency="1"
								   TickPlacement="BottomRight"/>

					<c:TextValue Text="Split method" Content="{Binding}">
						<c:TextValue.ContentTemplate>
							<DataTemplate>
								<ComboBox x:Name="ModeComboBox"
										  Grid.Column="1"
										  Items="{Binding AvailableCountModes}"
										  SelectedItem="{Binding CountMode}"/>
							</DataTemplate>
						</c:TextValue.ContentTemplate>
					</c:TextValue>

					<c:TextValue Text="Count segments" Content="{Binding}">
						<c:TextValue.ContentTemplate>
							<DataTemplate>
								<ComboBox x:Name="CountComboBox"
										  Items="{Binding AvailableAreaCounts}"
										  SelectedItem="{Binding AreaCount}"/>
							</DataTemplate>
						</c:TextValue.ContentTemplate>
					</c:TextValue>

					<ItemsControl Items="{Binding AreaItems}">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="items:GroundStationAreaViewModel">
								<Grid ColumnDefinitions="40, 30, *">
									<Border Background="{Binding Color, Converter={StaticResource BrushConv}}"/>
									<TextBlock Text="-"
											   Grid.Column="1"
											   HorizontalAlignment="Center"
											   Classes="h2 medium"/>
									<TextBlock Text="{Binding Angle, StringFormat={}{0:00.0}°}"
											   Classes="h2 medium"
											   Grid.Column="2"/>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

				</StackPanel>
			</Border>

		</Grid>
	</Border>

</UserControl>
