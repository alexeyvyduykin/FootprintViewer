<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:FootprintViewer.UI.ViewModels"
             xmlns:toolBar="clr-namespace:FootprintViewer.UI.ViewModels.ToolBar"
			 xmlns:selectors="clr-namespace:FootprintViewer.UI.Selectors"
			 xmlns:converters="clr-namespace:FootprintViewer.UI.Converters"
             xmlns:local="clr-namespace:FootprintViewer.UI"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:behaviors="clr-namespace:FootprintViewer.UI.Behaviors"
             xmlns:materialIcons="using:Material.Icons.Avalonia"
             xmlns:views="clr-namespace:FootprintViewer.UI.Views"
             xmlns:toolBarView="clr-namespace:FootprintViewer.UI.Views.ToolBar"
             xmlns:c="clr-namespace:FootprintViewer.UI.Controls"
             xmlns:conv="clr-namespace:FootprintViewer.UI.Converters"
             mc:Ignorable="d" d:DesignWidth="380" d:DesignHeight="540"
			 x:DataType="toolBar:ToolBarViewModel"
             x:Class="FootprintViewer.UI.Views.ToolBar.ToolBarView"
			 x:CompileBindings="True">

	<Design.DataContext>
		<toolBar:ToolBarViewModel></toolBar:ToolBarViewModel>
	</Design.DataContext>

	<UserControl.Resources>
		<conv:ToolBarToolTipConverter x:Key="ToolTipConv"/>
	</UserControl.Resources>

	<UserControl.Styles>

		<Style Selector="MenuItem" x:DataType="vm:MenuItemViewModel">
			<Setter Property="Foreground" Value="{DynamicResource TextMediumBrush}"/>
			<Setter Property="Header" Value="{Binding Header}"/>
			<Setter Property="Items" Value="{Binding Items}"/>
			<Setter Property="Command" Value="{Binding Command}"/>
			<Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
		</Style>

		<Style Selector="MenuFlyoutPresenter">
			<Setter Property="Cursor" Value="Arrow"/>
			<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Margin" Value="8,0,0,0"/>
			<Setter Property="CornerRadius" Value="8"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>

		<Style Selector="FlyoutPresenter">
			<Setter Property="Cursor" Value="Arrow"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Margin" Value="8,0,0,0"/>
			<Setter Property="CornerRadius" Value="8"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>

		<Style Selector="Button.map" x:DataType="toolBar:ToolClick">
			<Setter Property="Width" Value="36"></Setter>
			<Setter Property="Height" Value="36"></Setter>
			<Setter Property="Command" Value="{Binding Click}"></Setter>
			<Setter Property="HorizontalAlignment" Value="Left"></Setter>
			<Setter Property="ToolTip.Tip" Value="{Binding Tag, Converter={StaticResource ToolTipConv}}"></Setter>
		</Style>

		<Style Selector="ToggleButton.map" x:DataType="toolBar:ToolCheck">
			<Setter Property="Width" Value="36"></Setter>
			<Setter Property="Height" Value="36"></Setter>
			<Setter Property="IsChecked" Value="{Binding IsCheck, Mode=TwoWay}"></Setter>
			<Setter Property="HorizontalAlignment" Value="Left"></Setter>
			<Setter Property="ToolTip.Tip" Value="{Binding Tag, Converter={StaticResource ToolTipConv}}"></Setter>
		</Style>

		<Style Selector="materialIcons|MaterialIcon.t1">
			<Setter Property="Width" Value="35"></Setter>
			<Setter Property="Height" Value="35"></Setter>
			<Setter Property="Foreground" Value="{DynamicResource TextLightBrush}"></Setter>
		</Style>

		<Style Selector="Viewbox.t1">
			<Setter Property="Width" Value="36"></Setter>
			<Setter Property="Height" Value="36"></Setter>
		</Style>

		<Style Selector="PathIcon.t1">
			<Setter Property="Foreground" Value="{DynamicResource TextHighBrush}"></Setter>
			<Setter Property="Margin" Value="6.5"></Setter>
			<Setter Property="Width" Value="23"></Setter>
			<Setter Property="Height" Value="23"></Setter>
		</Style>

		<Style Selector="ItemsControl.toolCollection"
			   x:DataType="toolBar:ToolCollection">
			<Setter Property="Items" Value="{Binding Items}"></Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" Background="Transparent">
							<i:Interaction.Behaviors>
								<behaviors:PointerEnterEventBehavior Command="{Binding Open}"/>
								<behaviors:PointerLeaveEventBehavior Command="{Binding Close}"/>
							</i:Interaction.Behaviors>
						</StackPanel>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate DataType="toolBar:ToolCheck">
						<ToggleButton x:CompileBindings="False"
									  DataContext="{TemplateBinding}"
									  Classes="map">
							<materialIcons:MaterialIcon Kind="{Binding Key, Converter={x:Static converters:MaterialIconConverter.Instance}}"
														Classes="t1"/>
						</ToggleButton>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style Selector="ItemsControl.toolCollection > ContentPresenter">
			<Setter Property="Margin" Value="4,0,0,0"/>
		</Style>

		<Style Selector="ItemsControl.toolCollection > ContentPresenter:nth-child(1)">
			<Setter Property="Margin" Value="0,0,0,0"/>
		</Style>

	</UserControl.Styles>

	<Panel>
		<StackPanel Spacing="1">

			<!-- ZoomIn -->
			<Button Classes="map" DataContext="{Binding ZoomIn}">
				<materialIcons:MaterialIcon Kind="Plus" Classes="t1"/>
			</Button>

			<!-- ZoomOut -->
			<Button Classes="map" DataContext="{Binding ZoomOut}">
				<materialIcons:MaterialIcon Kind="Minus" Classes="t1"/>
			</Button>

			<!-- AOICollection -->
			<ItemsControl Classes="toolCollection"
						  DataContext="{Binding AOICollection}"
						  Margin="0,10,0,0"/>

			<!-- RouteDistance -->
			<ToggleButton Classes="map"
						  DataContext="{Binding RouteDistance}">
				<materialIcons:MaterialIcon Kind="SetSquare" Classes="t1"/>
			</ToggleButton>

			<!-- MapItems -->
			<ToggleButton x:Name="MapBackgroundSelectorButton"
						  DataContext="{Binding MapBackgrounds}"
						  Margin="0,10,0,0"
						  Classes="map">
				<ToggleButton.Flyout>
					<MenuFlyout x:CompileBindings="False"
								Placement="RightEdgeAlignedTop"
								ShowMode="TransientWithDismissOnPointerMoveAway"
								Items="{Binding $parent[UserControl].DataContext.MapItems}"/>
				</ToggleButton.Flyout>
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-map}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

			<!-- LayerItems -->
			<ToggleButton x:Name="MapLayerSelectorButton"
						  x:CompileBindings="False"
						  DataContext="{Binding MapLayers}"
						  IsChecked="{Binding $parent[UserControl].DataContext.IsLayerContainerOpen}"
						  Classes="map">
				<ToggleButton.Flyout>
					<Flyout x:CompileBindings="False"
							Placement="RightEdgeAlignedTop"
							ShowMode="TransientWithDismissOnPointerMoveAway">
						<toolBarView:LayerContainerView DataContext="{Binding $parent[UserControl].DataContext.LayerContainer}"/>
					</Flyout>
				</ToggleButton.Flyout>
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-layers-o}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

			<!-- SelectGeometry -->
			<ToggleButton Classes="map"
						  DataContext="{Binding SelectGeometry}"
						  Margin="0,10,0,0">
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-arrow}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

			<!-- GeometryCollection -->
			<ItemsControl Classes="toolCollection"
						  DataContext="{Binding GeometryCollection}"/>

			<!-- TranslateGeometry -->
			<ToggleButton Classes="map"
						  DataContext="{Binding TranslateGeometry}">
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-move}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

			<!-- RotateGeometry -->
			<ToggleButton Classes="map"
						  DataContext="{Binding RotateGeometry}">
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-rotate}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

			<!-- ScaleGeometry -->
			<ToggleButton Classes="map"
						  DataContext="{Binding ScaleGeometry}">
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-scale-poly}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

			<!-- EditGeometry -->
			<ToggleButton Classes="map"
						  DataContext="{Binding EditGeometry}">
				<Viewbox Classes="t1">
					<PathIcon Data="{DynamicResource fg-modify-poly-o}" Classes="t1"/>
				</Viewbox>
			</ToggleButton>

		</StackPanel>
	</Panel>

</UserControl>
