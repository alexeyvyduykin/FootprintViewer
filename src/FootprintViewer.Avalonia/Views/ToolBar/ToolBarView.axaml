<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vmd="clr-namespace:FootprintViewer.Designer;assembly=FootprintViewer"
             xmlns:vm="clr-namespace:FootprintViewer.ViewModels;assembly=FootprintViewer"
             xmlns:toolBar="clr-namespace:FootprintViewer.ViewModels.ToolBar;assembly=FootprintViewer"
             xmlns:local="clr-namespace:FootprintViewer.Avalonia"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:behaviors="clr-namespace:FootprintViewer.Avalonia.Behaviors"
             xmlns:materialIcons="using:Material.Icons.Avalonia"
             xmlns:views="clr-namespace:FootprintViewer.Avalonia.Views"
             xmlns:toolBarView="clr-namespace:FootprintViewer.Avalonia.Views.ToolBar"
             xmlns:controls="clr-namespace:FootprintViewer.Avalonia.Controls"
             xmlns:conv="clr-namespace:FootprintViewer.Avalonia.Converters"
             mc:Ignorable="d" d:DesignWidth="180" d:DesignHeight="540"
			 x:DataType="toolBar:ToolBarViewModel"
             x:Class="FootprintViewer.Avalonia.Views.ToolBar.ToolBarView"
			 x:CompileBindings="True"
			 d:DataContext="{x:Static vmd:DesignData.ToolBar}">

	<UserControl.Resources>
		<conv:ToolBarToolTipConverter x:Key="ToolTipConv"/>
	</UserControl.Resources>

	<UserControl.Styles>

		<Style Selector="MenuItem" x:DataType="vm:MenuItemViewModel">
			<Setter Property="Header" Value="{Binding Header}"/>
			<Setter Property="Items" Value="{Binding Items}"/>
			<Setter Property="Command" Value="{Binding Command}"/>
			<Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
		</Style>

		<Style Selector="FlyoutPresenter">
			<Setter Property="Padding" Value="8,0,0,0"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style>

		<Style Selector="ToolTip">
			<Setter Property="Placement" Value="Top"></Setter>
			<Setter Property="VerticalOffset" Value="-4"></Setter>
			<Setter Property="Background" Value="Black"/>
			<Setter Property="Foreground" Value="WhiteSmoke"/>
			<Setter Property="Padding" Value="8,4,8,4"/>
		</Style>

		<Style Selector="Button.toolClick" x:DataType="toolBar:ToolClick">
			<Setter Property="Width" Value="36"></Setter>
			<Setter Property="Height" Value="36"></Setter>
			<Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"></Setter>
			<Setter Property="Command" Value="{Binding Click}"></Setter>
			<Setter Property="Padding" Value="0"></Setter>
			<Setter Property="Opacity" Value="0.75"></Setter>
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Left"></Setter>
			<Setter Property="ToolTip.ShowDelay" Value="0"></Setter>
			<Setter Property="ToolTip.Tip" Value="{Binding Tag, Converter={StaticResource ToolTipConv}}"></Setter>
		</Style>

		<Style Selector="ToggleButton.toolCheck" x:DataType="toolBar:ToolCheck">
			<Setter Property="Width" Value="36"></Setter>
			<Setter Property="Height" Value="36"></Setter>
			<Setter Property="IsChecked" Value="{Binding IsCheck, Mode=TwoWay}"></Setter>
			<Setter Property="Content" Value="{Binding}"></Setter>
			<Setter Property="Padding" Value="0"></Setter>
			<Setter Property="Opacity" Value="0.75"></Setter>
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Left"></Setter>
			<Setter Property="ToolTip.ShowDelay" Value="0"></Setter>
			<Setter Property="ToolTip.Tip" Value="{Binding Tag, Converter={StaticResource ToolTipConv}}"></Setter>
		</Style>

		<Style Selector="materialIcons|MaterialIcon">
			<Setter Property="Width" Value="35"></Setter>
			<Setter Property="Height" Value="35"></Setter>
			<Setter Property="Foreground" Value="#d6d9dd"></Setter>
		</Style>

		<Style Selector="PathIcon">
			<Setter Property="Margin" Value="6.5"></Setter>
			<Setter Property="Width" Value="23"></Setter>
			<Setter Property="Height" Value="23"></Setter>
		</Style>

		<Style Selector="ItemsControl.toolCollection" x:DataType="toolBar:ToolCollection">
			<Setter Property="Items" Value="{Binding Items}"></Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" Background="Transparent">
							<i:Interaction.Behaviors>
								<behaviors:PointerEnterEventBehavior Command="{Binding Open}"/>
								<behaviors:PointerLeaveEventBehavior Command="{Binding Close}"/>
							</i:Interaction.Behaviors>
						</StackPanel>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<ToggleButton DataContext="{TemplateBinding}"
									  ContentTemplate="{DynamicResource ToolIconDataSelector}"
									  Classes="toolCheck"/>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style Selector="ItemsControl.toolCollection > ContentPresenter">
			<Setter Property="Margin" Value="4,0,0,0"/>
		</Style>

		<Style Selector="ItemsControl.toolCollection > ContentPresenter:nth-child(1)">
			<Setter Property="Margin" Value="0,0,0,0"/>
		</Style>

	</UserControl.Styles>

	<Panel>
		<StackPanel>

			<!-- ZoomIn -->
			<Button Classes="toolClick"
					DataContext="{Binding ZoomIn}">
				<materialIcons:MaterialIcon Kind="Plus"/>
			</Button>

			<!-- ZoomOut -->
			<Button Classes="toolClick"
					DataContext="{Binding ZoomOut}"
					Margin="0,1,0,0">
				<materialIcons:MaterialIcon Kind="Minus"/>
			</Button>

			<!-- AOICollection -->
			<ItemsControl Classes="toolCollection"
						  DataContext="{Binding AOICollection}"
						  Margin="0,10,0,0"/>

			<!-- RouteDistance -->
			<ToggleButton Classes="toolCheck"
						  DataContext="{Binding RouteDistance}"
						  Margin="0,1,0,0">
				<materialIcons:MaterialIcon Width="28" Height="28" Kind="SetSquare" Foreground="#d6d9dd"/>
			</ToggleButton>

			<!-- MapItems -->
			<ToggleButton x:Name="MapBackgroundSelectorButton"
						  DataContext="{Binding MapBackgrounds}"
						  Margin="0,10,0,0"
						  Classes="toolCheck">
				<ToggleButton.Flyout>
					<MenuFlyout x:CompileBindings="False"
								Placement="RightEdgeAlignedTop"
								ShowMode="TransientWithDismissOnPointerMoveAway"
								Items="{Binding $parent[UserControl].DataContext.MapItems}"/>
				</ToggleButton.Flyout>
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-map}"/>
				</Viewbox>
			</ToggleButton>

			<!-- LayerItems -->
			<ToggleButton x:Name="MapLayerSelectorButton"
						  IsChecked="{Binding IsLayerContainerOpen}"
						  Margin="0,1,0,0"
						  Classes="toolCheck">
				<ToggleButton.Flyout>
					<Flyout x:CompileBindings="False"
							Placement="RightEdgeAlignedTop"
							ShowMode="TransientWithDismissOnPointerMoveAway">
						<toolBarView:LayerContainerView DataContext="{Binding LayerContainer}"/>
					</Flyout>
				</ToggleButton.Flyout>
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-layers-o}"/>
				</Viewbox>
			</ToggleButton>

			<!-- SelectGeometry -->
			<ToggleButton Classes="toolCheck"
						  DataContext="{Binding SelectGeometry}"
						  Margin="0,10,0,0">
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-arrow}"/>
				</Viewbox>
			</ToggleButton>

			<!-- GeometryCollection -->
			<ItemsControl Classes="toolCollection"
						  DataContext="{Binding GeometryCollection}"
						  Margin="0,1,0,0"/>

			<!-- TranslateGeometry -->
			<ToggleButton Classes="toolCheck"
						  DataContext="{Binding TranslateGeometry}"
						  Margin="0,1,0,0">
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-move}"/>
				</Viewbox>
			</ToggleButton>

			<!-- RotateGeometry -->
			<ToggleButton Classes="toolCheck"
						  DataContext="{Binding RotateGeometry}"
						  Margin="0,1,0,0">
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-rotate}"/>
				</Viewbox>
			</ToggleButton>

			<!-- ScaleGeometry -->
			<ToggleButton Classes="toolCheck"
						  DataContext="{Binding ScaleGeometry}"
						  Margin="0,1,0,0">
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-scale-poly}"/>
				</Viewbox>
			</ToggleButton>

			<!-- EditGeometry -->
			<ToggleButton Classes="toolCheck"
						  DataContext="{Binding EditGeometry}"
						  Margin="0,1,0,0">
				<Viewbox Width="36" Height="36">
					<PathIcon Data="{DynamicResource fg-modify-poly-o}"/>
				</Viewbox>
			</ToggleButton>

		</StackPanel>
	</Panel>

</UserControl>
