<UserControl x:Class="FootprintViewer.WPF.Views.ToolControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"   
             xmlns:local="clr-namespace:FootprintViewer.WPF"                           
             xmlns:views="clr-namespace:FootprintViewer.WPF.Views"       
             xmlns:controls="clr-namespace:FootprintViewer.WPF.Controls"      
             xmlns:vm="clr-namespace:FootprintViewer.ViewModels;assembly=FootprintViewer"            
             d:DataContext="{d:DesignInstance vm:ToolManagerDesigner, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             x:Name="userControl"
             d:DesignHeight="450" d:DesignWidth="800"
             Cursor="Hand">
    
    <UserControl.Resources>
        
        <Style TargetType="{x:Type Button}" x:Key="ToolButton">
            <Setter Property="Background" Value="{StaticResource MainWidgetBrush}"/>
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}" 
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" 
                                                  Content="{TemplateBinding Content}" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource LightWidgetBrush}" />
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource DarkWidgetBrush}" />
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ToolButtonTop" BasedOn="{StaticResource ToolButton}">
            <Setter Property="Border.CornerRadius" Value="4,4,0,0" />
        </Style>

        <Style TargetType="Button" x:Key="ToolButtonBottom" BasedOn="{StaticResource ToolButton}">
            <Setter Property="Border.CornerRadius" Value="0,0,4,4" />
        </Style>

        <Style TargetType="Button" x:Key="ToolButtonCorner" BasedOn="{StaticResource ToolButton}">
            <Setter Property="Border.CornerRadius" Value="4,4,4,4" />
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="ToolToggleButton">
            <Setter Property="Background" Value="{StaticResource MainWidgetBrush}" />
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Width" Value="36"></Setter>
            <Setter Property="Height" Value="36"></Setter>
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}" 
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" 
                                                  Content="{TemplateBinding Content}" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource LightWidgetBrush}" />
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource DarkWidgetBrush}" />
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource DarkWidgetBrush}" />
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" x:Key="ToolToggleButtonCorner" BasedOn="{StaticResource ToolToggleButton}">
            <Setter Property="Border.CornerRadius" Value="4" />
        </Style>

        <Style TargetType="ToggleButton" x:Key="ToolToggleButtonTop" BasedOn="{StaticResource ToolToggleButton}">
            <Setter Property="Border.CornerRadius" Value="4,4,0,0" />
        </Style>

        <Style TargetType="ToggleButton" x:Key="ToolToggleButtonBottom" BasedOn="{StaticResource ToolToggleButton}">
            <Setter Property="Border.CornerRadius" Value="0,0,4,4" />
        </Style>

        <DataTemplate x:Key="RectangleItemTemplate">
            <Viewbox>
                <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconAddRectangle}"/>
            </Viewbox>
        </DataTemplate>

        <DataTemplate x:Key="PolygonItemTemplate">
            <Viewbox>
                <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconAddPolygon}"/>
            </Viewbox>
        </DataTemplate>

        <DataTemplate x:Key="CircleItemTemplate">
            <Viewbox>
                <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconAddCircle}"/>
            </Viewbox>
        </DataTemplate>

        <local:ToolIconSelector x:Key="ToolIconDataSelector" 
                                RectangleTemplate="{StaticResource RectangleItemTemplate}"
                                PolygonTemplate="{StaticResource PolygonItemTemplate}"
                                CircleTemplate="{StaticResource CircleItemTemplate}"/>

    </UserControl.Resources>

    <Grid>
    <StackPanel>

            <StackPanel DataContext="{Binding ZoomIn}"
                    Margin="0,0,0,1" 
                    HorizontalAlignment="Left">
                       
            <Button Style="{StaticResource ToolButtonTop}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Button.ToolTip>
                        <ToolTip Content="{Binding Tooltip}" Style="{StaticResource FastTooltip}"/>
                </Button.ToolTip>
                <Viewbox>
                    <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconZoomIn}"/>
                </Viewbox>
            </Button>
            
        </StackPanel>

            <StackPanel DataContext="{Binding ZoomOut}"
                    HorizontalAlignment="Left">
            <Button Style="{StaticResource ToolButtonBottom}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.ToolTip>
                    <ToolTip Content="{Binding Tooltip}" Style="{StaticResource FastTooltip}"/>
                </Button.ToolTip>
                <Viewbox>
                    <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconZoomOut}"/>
                </Viewbox>
            </Button>
        </StackPanel>

        <StackPanel Height="10"/>

        <StackPanel x:Name="stck" HorizontalAlignment="Left"
                    Background="Transparent"
                    Margin="0,0,0,1" 
                    DataContext="{Binding AOICollection}">
                     
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:ChangePropertyAction 
                        TargetName="dummy"
                        PropertyName="IsEnabled" Value="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeave">
                    <i:ChangePropertyAction 
                        TargetName="dummy"
                        PropertyName="IsEnabled" Value="False"/>
                </i:EventTrigger>

            </i:Interaction.Triggers>

                <TextBlock x:Name="dummy" IsEnabled="{Binding Visible, Mode=TwoWay}" Height="0"/>

                <ItemsControl ItemsSource="{Binding Items}"
                          AlternationCount="{Binding Items.Count}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                
                <ItemsControl.ItemTemplate>
                    <DataTemplate>

                        <ToggleButton x:Name="btn"                                
                                      Margin="4,0,0,0"
                                      IsChecked="{Binding IsActive, Mode=TwoWay}"                                
                                      Style="{StaticResource ToolToggleButtonCorner}">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding Command}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ToggleButton.ToolTip>
                                    <ToolTip Content="{Binding Tooltip}" Style="{StaticResource FastTooltip}"/>
                            </ToggleButton.ToolTip>

                                <ContentControl Content="{Binding}"
                                            ContentTemplateSelector="{StaticResource ToolIconDataSelector}"/>

                        </ToggleButton>

                        <DataTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Margin" TargetName="btn" Value="0"/>
                                <Setter Property="Border.CornerRadius" TargetName="btn" Value="4,4,0,0"/>
                            </Trigger>
                        </DataTemplate.Triggers>

                    </DataTemplate>
                    
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

            <StackPanel DataContext="{Binding RouteDistance}"   
                    Margin="0,0,0,1"
                    HorizontalAlignment="Left">
            <ToggleButton Style="{StaticResource ToolToggleButtonBottom}"                    
                          IsChecked="{Binding IsActive, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding Command}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <ToggleButton.ToolTip>
                        <ToolTip Content="{Binding Tooltip}" Style="{StaticResource FastTooltip}"/>
                </ToggleButton.ToolTip>

                <Viewbox>
                    <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconScale}"/>
                </Viewbox>
            </ToggleButton>
        </StackPanel>

        <StackPanel Height="10"/>

            <controls:Flyout Placement="Right"                         
                             Target="{Binding ElementName=LayerSelectorButton}"                         
                             IsAnchor="True"                         
                             Background="{StaticResource MainBackgroundBrush}"                                              
                             IsOpen="{Binding WorldMapSelector.IsOpen}"    
                             Visibility="Collapsed"
                             Content="{Binding WorldMapSelector}">
                <controls:Flyout.FlyoutTemplate>
                    <DataTemplate>
                        <views:WorldMapSelectorView DataContext="{Binding}"/>
                    </DataTemplate>
                </controls:Flyout.FlyoutTemplate>
            </controls:Flyout>

            <StackPanel DataContext="{Binding WorldMaps}"                      
                    HorizontalAlignment="Left">
                <Button x:Name="LayerSelectorButton" 
                        Style="{StaticResource ToolButtonCorner}">

                    <Button.ToolTip>
                        <ToolTip Content="{Binding Tooltip}" Style="{StaticResource FastTooltip}"/>
                    </Button.ToolTip>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Viewbox>
                        <Image Margin="8.5" Width="19" Height="19" Source="{DynamicResource IconMap}"/>
                    </Viewbox>
                </Button>
            </StackPanel>

        </StackPanel>
    </Grid>
</UserControl>
